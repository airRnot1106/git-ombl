name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-unknown-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build ${{ matrix.target }}-linux
        run: |
          nix build .#git-ombl-linux-${{ matrix.target }}
          mkdir -p dist
          cp result/bin/git-ombl dist/git-ombl-${{ matrix.target }}-unknown-linux-gnu
          tar -czf dist/git-ombl-${{ matrix.target }}-unknown-linux-gnu.tar.gz -C dist git-ombl-${{ matrix.target }}-unknown-linux-gnu

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-ombl-${{ matrix.target }}-unknown-linux-gnu
          path: dist/git-ombl-${{ matrix.target }}-unknown-linux-gnu.tar.gz

  build-x86_64-apple-darwin:
    runs-on: macos-13  # Intel runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build x86_64-apple-darwin
        run: |
          nix build .#default
          mkdir -p dist
          cp result/bin/git-ombl dist/git-ombl-x86_64-apple-darwin
          tar -czf dist/git-ombl-x86_64-apple-darwin.tar.gz -C dist git-ombl-x86_64-apple-darwin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-ombl-x86_64-apple-darwin
          path: dist/git-ombl-x86_64-apple-darwin.tar.gz

  build-aarch64-apple-darwin:
    runs-on: macos-latest  # Apple Silicon runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build aarch64-apple-darwin
        run: |
          nix build .#default
          mkdir -p dist
          cp result/bin/git-ombl dist/git-ombl-aarch64-apple-darwin
          tar -czf dist/git-ombl-aarch64-apple-darwin.tar.gz -C dist git-ombl-aarch64-apple-darwin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-ombl-aarch64-apple-darwin
          path: dist/git-ombl-aarch64-apple-darwin.tar.gz

  build-x86_64-pc-windows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build x86_64-pc-windows
        run: |
          nix build .#git-ombl-windows-x86_64
          mkdir -p dist
          cp result/bin/git-ombl.exe dist/git-ombl-x86_64-pc-windows-gnu.exe
          tar -czf dist/git-ombl-x86_64-pc-windows-gnu.tar.gz -C dist git-ombl-x86_64-pc-windows-gnu.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-ombl-x86_64-pc-windows-gnu
          path: dist/git-ombl-x86_64-pc-windows-gnu.tar.gz

  release:
    needs: [build-unknown-linux, build-x86_64-apple-darwin, build-aarch64-apple-darwin, build-x86_64-pc-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare release files
        run: |
          mkdir -p release
          find dist -name "*.tar.gz" -exec cp {} release/ \;

      - name: Generate checksums
        run: |
          cd release
          sha256sum *.tar.gz > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            release/*.tar.gz
            release/checksums.txt
          body: |
            ## git-ombl ${{ github.ref_name }}

            **git-omni-blame** - Git blame wrapper to display the full commit history for a line.

            Unlike `git blame` which shows only the most recent change, git-ombl traces the entire history of a line through all commits that affected it.

            ### Supported Platforms
            - **Linux x86_64**: `git-ombl-x86_64-unknown-linux-gnu.tar.gz`
            - **Linux aarch64**: `git-ombl-aarch64-unknown-linux-gnu.tar.gz`
            - **macOS x86_64**: `git-ombl-x86_64-apple-darwin.tar.gz` (Intel)
            - **macOS aarch64**: `git-ombl-aarch64-apple-darwin.tar.gz` (Apple Silicon)
            - **Windows x86_64**: `git-ombl-x86_64-pc-windows-gnu.tar.gz`

            ### Installation
            ```bash
            # Extract and install
            tar -xzf git-ombl-<target>-<platform>.tar.gz
            chmod +x git-ombl-<target>-<platform>
            mv git-ombl-<target>-<platform> /usr/local/bin/git-ombl
            ```

            ### Usage
            ```bash
            git-ombl <file> <line_number> [OPTIONS]

            # Examples
            git-ombl src/main.rs 42
            git-ombl src/main.rs 42 --format json
            git-ombl src/main.rs 42 --limit 10
            ```

            ### Verification
            Verify downloads with: `sha256sum -c checksums.txt`
